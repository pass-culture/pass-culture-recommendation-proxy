name: "1 [on_pull_request] Run tests and linters"

on:
  pull_request:

env:
  docker_registry: "europe-west1-docker.pkg.dev/passculture-infra-prod/pass-culture-artifact-registry"
  image: "recommendation-proxy"

jobs:
  build-test-image:
    name: "Build tests image"
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.compute-image-name.outputs.image_name }}
      checksum_tag: ${{ steps.define-tag.outputs.CHECKSUM_TAG }}
    steps:
      - name: "Define image tag"
        id: define-tag
        run: |
          CHECKSUM_TAG=$(tar --sort=name --owner=0 --group=0 --mtime='UTC 2019-01-01' -cf - . | sha1sum | awk '{ print $1 }')
          echo "CHECKSUM_TAG=$CHECKSUM_TAG" >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: false
      - name: "Add version to api"
        run: |
            echo "${{ github.event.pull_request.head.sha }}" > version.txt
            git add version.txt
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3
        with:
            driver: docker
      - name: "Compute docker image name:tag"
        id: compute-image-name
        run: echo "image_name=${{ env.docker_registry }}/${{env.image}}:${{ steps.define-tag.outputs.CHECKSUM_TAG }}" | tee -a ${GITHUB_OUTPUT}
      - name: "Build ${{ steps.compute-image-name.outputs.image_name }} image"
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ steps.compute-image-name.outputs.image_name }}
      - name: "Store artifact"
        run: |
          docker images
          docker save ${{ steps.compute-image-name.outputs.image_name }} > ${{env.image}}-${{ steps.define-tag.outputs.CHECKSUM_TAG }}.tar
      - name: "Upload of artifact content to blob storage"
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.image}}-${{ steps.define-tag.outputs.CHECKSUM_TAG }}.tar
          path: |
            ./
          retention-days: 1
    
  tests-and-quality-checks:
    name: "Tests and quality checks"
    runs-on: ubuntu-latest
    needs: build-test-image
    steps:
      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          name: ${{env.image}}-${{ needs.build-test-image.outputs.checksum_tag }}.tar
          path: ${{ runner.temp }}
      - name: "Docker load artifact."
        run: |
          docker load --input ${{ runner.temp }}/${{env.image}}-${{ needs.build-test-image.outputs.checksum_tag }}.tar
      - name: "Check imports are well organized with isort"
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ needs.build-test-image.outputs.image_name }}
          run: isort . --check-only
      - name: "Run mypy"
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ needs.build-test-image.outputs.image_name }}
          run: mypy src
      - name: "Run black"
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ needs.build-test-image.outputs.image_name }}
          run: black . --check
      - name: "Run pylint"
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ needs.build-test-image.outputs.image_name }}
          run: pylint src
      
      - name: "Run pytest"
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ needs.build-test-image.outputs.image_name }}
          run: pytest -v --tb=short --color=yes
